name: CI
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  check-quality:
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Run image
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies with poetry
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Check poetry version
        run: |
          source .venv/bin/activate
          poetry --version

      - name: Run pylint
        run: |
          source .venv/bin/activate
          pylint elkm1_lib

      - name: Run black check
        run: |
          source .venv/bin/activate
          black --check .

      - name: Run mypy
        run: |
          source .venv/bin/activate
          mypy elkm1_lib

      - name: Run isort check
        run: |
          source .venv/bin/activate
          isort --check-only --profile black .

      # - name: Run pytest
      #   run: |
      #     source .venv/bin/activate
      #     pytest
